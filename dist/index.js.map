{"version":3,"file":"index.js","sources":["../src/Constants.js","../src/utils.js","../src/Communicator.js","../index.js"],"sourcesContent":["export const EXCLUDED = ['body', 'expected', 'GET'];\n\nexport default {};\n","import { isObject, isEmpty } from 'lodash';\nimport { EXCLUDED } from './Constants';\n\n/**\n * @description Merges 2 object recursavly, overriding values from second to first object.\n * @param {Obect} obj1 - firs object, will be overriden\n * @param {Obect} obj2 - second object\n */\nconst mergeTwo = (obj1, obj2) => {\n  const _obj2 = obj2;\n  let out = {};\n  Object.keys(obj1).forEach((k) => {\n    if (typeof obj1[k] === 'object' && obj1[k].constructor !== Array) {\n      if (obj2[k] && typeof obj2[k] === 'object') {\n        out[k] = mergeTwo(obj1[k], obj2[k]);\n      } else {\n        out[k] = obj1[k];\n      }\n    } else if (obj1[k].constructor === Array) {\n      out[k] = obj1[k];\n      if (obj2[k] && obj2[k].constructor === Array) {\n        out[k] = obj1[k].concat(obj2[k]);\n      }\n    } else if (obj2[k]) {\n      out[k] = obj2[k];\n    } else out[k] = obj1[k];\n    delete _obj2[k];\n  });\n  out = Object.assign({}, out, _obj2);\n  return out;\n};\n/**\n * @description Merges multiple objects recursevly\n * @param {Spread of objects} args\n */\nexport const deepMerge = (...args) => {\n  let out = {};\n  args.forEach((e) => {\n    if (e.constructor === Object) out = mergeTwo(out, e);\n  });\n  return out;\n};\n\n/**\n * @description Helper function that converts js object to GET params string.\n * {id:'123', user:'some'} -> \"?id=123&user=some\"\n * @param {Object} getObj - object containing GET key value pairs\n * @memberof Communicator\n */\nexport const getGetParamsAsString = (getObj) => {\n  if (isEmpty(getObj)) return '';\n  let out = '?';\n  Object.keys(getObj).forEach((k, i) => {\n    if (typeof getObj[k] !== 'object' && typeof getObj[k] !== 'function') {\n      out = `${out + (i !== 0 ? '&' : '') + k}=${getObj[k]}`;\n    } else if (Array.isArray(getObj[k])) {\n      out = `${out + (i !== 0 ? '&' : '') + k}=${getObj[k].join(',')}`;\n    }\n  });\n  return out;\n};\n\n/**\n * @description Function used for constructing url and inserting parametars in to the\n * predefined holders.\n * @example\n * baseUrl = localhost\n * url = /url/:id\n * request = {id: '22'}\n * output = localhost/url/22\n * Function also accepts absolute url, in which case will skip adding base url.\n * Absoulute url must contain http:// or https://\n * @example\n * baseUrl = localhost\n * url = http://someurl.com/url/:id\n * request = {id: '22'}\n * output = someurl.com/url/22\n * @param {Object} - request object\n * @param {String} - original url\n * @return {String} - url with inserted request parametars\n * @memberof Communicator\n */\nexport const constructUrl = (endPointUrl, request, baseUrl) => {\n  let url = endPointUrl;\n  let leftovers = {};\n  if (endPointUrl.indexOf('http') === -1) {\n    url = `${baseUrl}${endPointUrl}`;\n  }\n  if (isObject(request)) {\n    Object.keys(request).forEach((key) => {\n      if (EXCLUDED.indexOf(key) === -1) {\n        const regex = new RegExp(`:${key}`);\n        if (regex.test(url)) {\n          url = url.replace(regex, request[key]);\n        } else {\n          leftovers[key] = request[key];\n        }\n      } else if (key === 'GET') {\n        leftovers = { ...leftovers, ...request[key] };\n      }\n    });\n  }\n  url += getGetParamsAsString(leftovers);\n  return url;\n};\n\n/**\n * @description\n * Helper function that extracts , checks and prepares body object\n * @param {Object} request - request object containing body key.\n * body can either be preparsed or as js object.\n * @returns {Object} - {body: JSON.stringify()}\n */\nexport const getBody = (request) => {\n  if (!request.body) return false;\n  /* if (typeof request.body === 'string' && isObject(JSON.parse(request.body)))\n    { return { body: request.body }; } */\n  if (request.body instanceof FormData) return { body: request.body };\n  if (typeof request.body === 'string') return { body: request.body };\n  if (isObject(request.body)) return { body: JSON.stringify(request.body) };\n  return false;\n};\n\nexport const isPromise = (obj) => {\n  if (\n    !!obj\n    && (typeof obj === 'object' || typeof obj === 'function')\n    && typeof obj.then === 'function'\n  ) {\n    return true;\n  }\n  return false;\n};\n","import { isFunction, isArray } from 'lodash';\nimport {\n  constructUrl,\n  deepMerge,\n  getBody,\n  getGetParamsAsString,\n  // isPromise,\n} from './utils';\n/* import transformers from './Transformers'; */\n\nclass Communicator {\n  constructor() {\n    // if request doesnt contain 'http' it will be concatinated with baseUrl\n    this.baseUrl = '';\n    // we will use global fetch if exist\n    if (typeof window !== 'undefined' && typeof fetch !== 'undefined') {\n      this.fetch = fetch.bind(window);\n    } else {\n      this.fetch = null;\n    }\n    this.extraHelpers = {};\n    this.originalEndpoints = {};\n    this.reducerPool = {};\n    this.prefetchPool = {};\n    this.postfetchPool = {};\n    this.transformerPool = {};\n    this.asyncPrefetchPool = {};\n    this.successPool = {};\n    this.errorPool = {};\n    this.onError = [];\n    this.endpointCreationPool = [\n      this.addToPrefetchPool,\n      this.addToPostfetchPool,\n      this.addEndpointAsClassFunction,\n      this.addAsyncPrefetchPool,\n      this.addOnErrorPool,\n      this.addOnSuccessPool,\n    ];\n    // actions are a collection of endpoint actions that can be exported for further use\n    this.actions = {};\n    this.basePrefix = 'api(.)(.)';\n    this.failStatuses = [\n      400,\n      401,\n      402,\n      403,\n      404,\n      405,\n      406,\n      407,\n      408,\n      409,\n      500,\n      501,\n      502,\n      503,\n    ];\n    this.baseOptions = {\n      credentials: 'include',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        Cache: 'no-cache',\n        credentials: 'same-origin',\n      },\n    };\n  }\n\n  /* GETers SETers */\n  setBaseUrl = (url) => {\n    this.baseUrl = url;\n  };\n\n  setPrefix = (prefix) => {\n    this.basePrefix = prefix;\n  };\n\n  setFetch = (_fetch) => {\n    const g = global || window;\n    this.fetch = _fetch.bind(g);\n  };\n\n  setBaseOptions = (options) => {\n    this.baseOptions = options;\n  };\n\n  setDispatcher = (dispatch) => {\n    this.dispatch = dispatch.bind(this);\n  };\n\n  setGetState = (getState) => {\n    this.getState = getState;\n  };\n\n  setFailedStatuses = (failStatuses) => {\n    this.failStatuses = failStatuses;\n  };\n\n  getHelpers = () => ({\n    ...this.extraHelpers,\n    deepMerge,\n    getGetParamsAsString,\n  });\n\n  addHelpers = (helpers) => {\n    this.extraHelpers = helpers;\n  };\n\n  /**\n   * @description Function that creates functions from endpont objects.\n   * It will run through all endpoints and through all endpointCreation function\n   * sending endpoint and endpoint name to it.\n   * By default it will set functions named as endpoint as part of this class,\n   * prefetch, postfetch and transformer methods and add endpoint to a list of original endpoints.\n   * @param {Object} endpoints - object from witch function will be created.\n   * Keys will be the function names.\n   * @memberof Communicator\n   */\n  setEndpoints = (endpoints) => {\n    Object.keys(endpoints).forEach((k) => {\n      this.endpointCreationPool.forEach((ecp) => {\n        ecp(endpoints[k], k);\n      });\n\n      // push endpoint to array of original request if needed for future reference or use\n      this.originalEndpoints[k] = endpoints[k];\n    });\n  };\n\n  /**\n   * @description Function that adds a prefetch method to prefetch pool for future use\n   * @param {Object} endpoint - function will extract prefetch key from endpoint if one exists\n   * @param {String} name - a name of the endpoint\n   * @memberof Communicator\n   */\n  addToPrefetchPool = ({ prefetch }, name) => {\n    if (prefetch && (isFunction(prefetch) || isArray(prefetch))) {\n      this.prefetchPool[name] = prefetch;\n    }\n  };\n\n  addAsyncPrefetchPool=({ asyncPrefetch }, name) => {\n    if (asyncPrefetch && (isFunction(asyncPrefetch) && !isArray(asyncPrefetch))) {\n      this.asyncPrefetchPool[name] = asyncPrefetch;\n    }\n  }\n\n  addOnErrorPool=({ onError }, name) => {\n    if (onError && (isFunction(onError) || isArray(onError))) {\n      this.errorPool[name] = onError;\n    }\n  }\n\n  addOnSuccessPool=({ onSuccess }, name) => {\n    if (onSuccess && (isFunction(onSuccess) || isArray(onSuccess))) {\n      this.successPool[name] = onSuccess;\n    }\n  }\n\n  /**\n   * @description Function that adds a postfetch method to postfetch pool for future use\n   * @param {Object} endpoint - function will extract postfetch key from endpoint if one exists\n   * @param {String} name - a name of the endpoint\n   * @memberof Communicator\n   */\n  addToPostfetchPool = ({ postfetch }, name) => {\n    if (postfetch && (isFunction(postfetch) || isArray(postfetch))) {\n      this.postfetchPool[name] = postfetch;\n    }\n  };\n\n  /**\n   * @description Function that adds endpoint to this class as class function. Such function\n   * can latter be called by myInstance.endpoint()\n   * @param {Object} endpoint - function will extract postfetch key from endpoint if one exists\n   * @param {String} name - a name of the endpoint\n   * @memberof Communicator\n   */\n  addEndpointAsClassFunction = ({ url, options, useEmptyHeaders }, name) => {\n    // requestParams,requestOptions can be added per request\n    // and will override original params and options\n    this[name] = (requestParams = {}, requestOptions = {}, _useEmptyHeaders) => this.baseFetch(\n      url,\n      options,\n      requestParams,\n      requestOptions,\n      name,\n      _useEmptyHeaders || useEmptyHeaders\n    );\n    // we also add this method to actions\n    this.actions[name] = this[name];\n  };\n\n  runForError=(name, { res, message }) => {\n    if (this.onError) {\n      const errFns = isArray(this.onError)\n        ? this.onError\n        : [this.onError];\n      errFns.forEach((errFn) => {\n        errFn({ name, response: res, message });\n      });\n    }\n    if (this.errorPool[name]) {\n      const errFns = isArray(this.errorPool[name])\n        ? this.errorPool[name]\n        : [this.errorPool[name]];\n      errFns.forEach((errFn) => {\n        errFn({ name, response: res, message });\n      });\n    }\n    if (this.dispatch && this.actionError) {\n      this.dispatch(this.actionError(name, res, message));\n    }\n  }\n\n  runPrefetchActions=(name, options) => {\n    if (this.asyncPrefetchPool[name] && this.getState) {\n      return this.asyncPrefetchPool[name](options).then((res) => {\n        if (res) return Promise.resolve(res);\n        return Promise.resolve(options);\n      });\n    }\n    return Promise.resolve(options);\n  }\n\n  /**\n   * @description This is a main fetch function. This will resolve the action and return either\n   *  a Promise if no dispatch is provided or it will dispatch\n   * success/ failure action to redux.\n   * @param {String} url - target url. This will be modified by request object if needed\n   * @param {Object} options - options of the request. Options contains data like headers, method\n   * type and other data you want to include to fetch request.\n   * This will be merged with baseOptions ( globals you can set at creation, options that apply to\n   *  all) and param options. Param options contains aditional\n   * data like body or can modifiy request overriding baseOptions and setted request options.\n   * @param {Object} request - object containing request data that will modify end URL. TODO -\n   * maybe move body params here...\n   * @param {String} name - Name of the api action. Based on name a appropriate action will be\n   * dispatched.\n   * @param {Boolean} useEmptyHeaders - if true, empty headers will be sent.\n   */\n  baseFetch = (\n    url,\n    options = {} /* options from call */,\n    requestParams = {} /* get, post params */,\n    reqestOptions = {} /* options from a singel call */,\n    name,\n    useEmptyHeaders = false\n  ) => {\n    if (!this.fetch) {\n      throw new Error(\n        'rest-fetcher-base requires fetch to be defined. Since none was found in construction you probably forgot to add one manually'\n      );\n    }\n    const expected = requestParams.expected || 'json';\n    /* let endPointUrl; */\n    let endOption = deepMerge(\n      this.baseOptions,\n      options,\n      reqestOptions\n      /* we add body later */\n    );\n    /* clear headers if needed */\n    if (useEmptyHeaders) endOption.headers = {};\n\n    const object = {\n      actions: this.actions,\n      getState: this.getState,\n      dispatch: this.dispatch,\n      params: requestParams,\n      options: endOption,\n      url,\n      helpers: this.getHelpers(),\n    };\n\n    return this.runPrefetchActions(name, object).then(\n      (_object) => {\n        let allObject = _object;\n        if (this.prefetchPool[name] && this.getState) {\n          const pf = isArray(this.prefetchPool[name])\n            ? this.prefetchPool[name]\n            : [this.prefetchPool[name]];\n\n          pf.forEach((prefetch) => {\n            const res = prefetch(allObject);\n            if (res)allObject = deepMerge(object, res);\n          });\n        }\n\n        endOption = deepMerge(allObject.options, getBody(allObject.params));\n        const endPointUrl = constructUrl(allObject.url, allObject.params, this.baseUrl);\n        /* if no dispatch return promise */\n        /* if (!this.dispatch || this.dispatch === null) {\n      return this.fetch(endPointUrl, endOption);\n    } */\n        /* dispatch action start */\n        if (this.dispatch && this.actionStart) {\n          this.dispatch(this.actionStart(name, endPointUrl, endOption));\n        }\n        /* fetch part */\n        let res;\n        return this.fetch(endPointUrl, endOption)\n          .then((response) => {\n            /* this object will be passes to second .then to be included in END dispatch */\n            res = {\n              ok: response.ok,\n              redirected: response.redirected,\n              status: response.status,\n              type: response.type,\n              url: response.url,\n            };\n            /* if (positiveResponseStatus.indexOf(response.status) !== -1 || response.ok) { */\n            return Promise.all([response[expected](), Promise.resolve(res)]);\n            /* }\n        throw response; */\n          })\n          .then((json) => {\n            let pfObj = {\n              actions: this.actions,\n              getState: this.getState,\n              dispatch: this.dispatch,\n              data: json[0],\n              response: json[1],\n              helpers: this.getHelpers(),\n            };\n            if (this.failStatuses.indexOf(json[1].status) !== -1) {\n              this.runForError(name, { res, message: json[0] });\n              // this.dispatch(this.actionError(name, res, json[0]));\n            } else {\n              if (this.successPool[name]) {\n                const sc = isArray(this.successPool[name])\n                  ? this.successPool[name]\n                  : [this.successPool[name]];\n                sc.forEach((e) => {\n                  const rpf = e(pfObj);\n                  /* if object is return -> deepMerge it */\n                  if (rpf) pfObj = deepMerge(pfObj, rpf);\n                });\n              }\n              /* json[0]->actual response, json[1]->res object storing some metadata */\n              if (this.dispatch && this.actionEnd) {\n                this.dispatch(this.actionEnd(name, json[0], json[1]));\n              }\n            }\n            if (this.postfetchPool[name]) {\n              const pf = isArray(this.postfetchPool[name])\n                ? this.postfetchPool[name]\n                : [this.postfetchPool[name]];\n              pf.forEach((e) => {\n                const rpf = e(pfObj);\n                /* if object is return -> deepMerge it */\n                if (rpf) pfObj = deepMerge(pfObj, rpf);\n              });\n              return Promise.resolve(pfObj.data);\n            }\n            return Promise.resolve(json[0]);\n          })\n          .catch((e) => {\n            this.runForError(name, { message: e.message, res });\n            /* if (this.onError) {\n              const errFns = isArray(this.onError)\n                ? this.onError[name]\n                : [this.onError[name]];\n              errFns.forEach((errFn) => {\n                errFn({ name, response: res, message: e.message });\n              });\n            }\n            if (this.errorPool[name]) {\n              const errFns = isArray(this.errorPool[name])\n                ? this.onError[name]\n                : [this.onError[name]];\n              errFns.forEach((errFn) => {\n                errFn({ name, response: res, message: e.message });\n              });\n            }\n            if (this.dispatch && this.actionError) {\n              this.dispatch(this.actionError(name, res, e.message));\n            } */\n          });\n      }\n    );\n  };\n}\n\nexport default Communicator;\n","import Api from './src';\n\nexport { default as Base } from './src';\nexport default new Api();\n"],"names":["EXCLUDED","mergeTwo","obj1","obj2","_obj2","out","Object","keys","forEach","k","constructor","Array","concat","assign","deepMerge","args","e","getGetParamsAsString","getObj","isEmpty","i","isArray","join","constructUrl","endPointUrl","request","baseUrl","url","leftovers","indexOf","isObject","key","regex","RegExp","test","replace","getBody","body","FormData","JSON","stringify","Communicator","setBaseUrl","setPrefix","prefix","basePrefix","setFetch","_fetch","g","global","window","fetch","bind","setBaseOptions","options","baseOptions","setDispatcher","dispatch","setGetState","getState","setFailedStatuses","failStatuses","getHelpers","extraHelpers","addHelpers","helpers","setEndpoints","endpoints","endpointCreationPool","ecp","originalEndpoints","addToPrefetchPool","name","prefetch","isFunction","prefetchPool","addAsyncPrefetchPool","asyncPrefetch","asyncPrefetchPool","addOnErrorPool","onError","errorPool","addOnSuccessPool","onSuccess","successPool","addToPostfetchPool","postfetch","postfetchPool","addEndpointAsClassFunction","useEmptyHeaders","requestParams","requestOptions","_useEmptyHeaders","baseFetch","actions","runForError","res","message","errFns","errFn","response","actionError","runPrefetchActions","then","Promise","resolve","reqestOptions","Error","expected","endOption","headers","object","params","_object","allObject","pf","actionStart","ok","redirected","status","type","all","json","pfObj","data","sc","rpf","actionEnd","reducerPool","transformerPool","credentials","Accept","Cache","Api"],"mappings":"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"}