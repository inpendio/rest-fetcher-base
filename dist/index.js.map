{"version":3,"file":"index.js","sources":["../src/Constants.js","../src/utils.js","../src/Communicator.js","../index.js"],"sourcesContent":["export const EXCLUDED = ['body', 'expected', 'GET'];\n\nexport default {};\n","import { isObject, isEmpty } from 'lodash';\nimport { EXCLUDED } from './Constants';\n\n/**\n * @description Merges 2 object recursavly, overriding values from second to first object.\n * @param {Obect} obj1 - firs object, will be overriden\n * @param {Obect} obj2 - second object\n */\nconst mergeTwo = (obj1, obj2) => {\n  const _obj2 = obj2;\n  let out = {};\n  Object.keys(obj1).forEach((k) => {\n    if (typeof obj1[k] === 'object' && obj1[k].constructor !== Array) {\n      if (obj2[k] && typeof obj2[k] === 'object') {\n        out[k] = mergeTwo(obj1[k], obj2[k]);\n      } else {\n        out[k] = obj1[k];\n      }\n    } else if (obj1[k].constructor === Array) {\n      out[k] = obj1[k];\n      if (obj2[k] && obj2[k].constructor === Array) {\n        out[k] = obj1[k].concat(obj2[k]);\n      }\n    } else if (obj2[k]) {\n      out[k] = obj2[k];\n    } else out[k] = obj1[k];\n    delete _obj2[k];\n  });\n  out = Object.assign({}, out, _obj2);\n  return out;\n};\n/**\n * @description Merges multiple objects recursevly\n * @param {Spread of objects} args\n */\nexport const deepMerge = (...args) => {\n  let out = {};\n  args.forEach((e) => {\n    if (e.constructor === Object) out = mergeTwo(out, e);\n  });\n  return out;\n};\n\n/**\n * @description Helper function that converts js object to GET params string.\n * {id:'123', user:'some'} -> \"?id=123&user=some\"\n * @param {Object} getObj - object containing GET key value pairs\n * @memberof Communicator\n */\nconst getGetParamsAsString = (getObj) => {\n  if (isEmpty(getObj)) return '';\n  let out = '?';\n  Object.keys(getObj).forEach((k, i) => {\n    if (typeof getObj[k] !== 'object' && typeof getObj[k] !== 'function') {\n      out = `${out + (i !== 0 ? '&' : '') + k}=${getObj[k]}`;\n    }\n  });\n  return out;\n};\n\n/**\n * @description Function used for constructing url and inserting parametars in to the\n * predefined holders.\n * @example\n * baseUrl = localhost\n * url = /url/:id\n * request = {id: '22'}\n * output = localhost/url/22\n * Function also accepts absolute url, in which case will skip adding base url.\n * Absoulute url must contain http:// or https://\n * @example\n * baseUrl = localhost\n * url = http://someurl.com/url/:id\n * request = {id: '22'}\n * output = someurl.com/url/22\n * @param {Object} - request object\n * @param {String} - original url\n * @return {String} - url with inserted request parametars\n * @memberof Communicator\n */\nexport const constructUrl = (endPointUrl, request, baseUrl) => {\n  let url = endPointUrl;\n  let leftovers = {};\n  if (endPointUrl.indexOf('http') === -1) {\n    url = `${baseUrl}${endPointUrl}`;\n  }\n  if (isObject(request)) {\n    Object.keys(request).forEach((key) => {\n      if (EXCLUDED.indexOf(key) === -1) {\n        const regex = new RegExp(`:${key}`);\n        if (regex.test(url)) {\n          url = url.replace(regex, request[key]);\n        } else {\n          leftovers[key] = request[key];\n        }\n      } else if (key === 'GET') {\n        leftovers = { ...leftovers, ...request[key] };\n      }\n    });\n  }\n  url += getGetParamsAsString(leftovers);\n  return url;\n};\n\n/**\n * @description\n * Helper function that extracts , checks and prepares body object\n * @param {Object} request - request object containing body key.\n * body can either be preparsed or as js object.\n * @returns {Object} - {body: JSON.stringify()}\n */\nexport const getBody = (request) => {\n  if (!request.body) return false;\n  /* if (typeof request.body === 'string' && isObject(JSON.parse(request.body)))\n    { return { body: request.body }; } */\n  if (typeof request.body === 'string') return { body: request.body };\n  if (isObject(request.body)) return { body: JSON.stringify(request.body) };\n  return false;\n};\n","import { isFunction, isArray } from 'lodash';\nimport { constructUrl, deepMerge, getBody } from './utils';\n/* import transformers from './Transformers'; */\n\nclass Communicator {\n  constructor() {\n    // if request doesnt contain 'http' it will be concatinated with baseUrl\n    this.baseUrl = '';\n    // we will use global fetch if exist\n    if (typeof window !== 'undefined' && typeof fetch !== 'undefined') {\n      this.fetch = fetch.bind(window);\n    } else {\n      this.fetch = null;\n    }\n    this.originalEndpoints = {};\n    this.reducerPool = {};\n    this.prefetchPool = {};\n    this.postfetchPool = {};\n    this.transformerPool = {};\n    this.endpointCreationPool = [\n      this.addToPrefetchPool,\n      this.addToPostfetchPool,\n      this.addEndpointAsClassFunction,\n    ];\n    // actions are a collection of endpoint actions that can be exported for further use\n    this.actions = {};\n    this.basePrefix = 'api(.)(.)';\n    this.baseOptions = {\n      credentials: 'include',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        Cache: 'no-cache',\n        credentials: 'same-origin',\n      },\n    };\n  }\n\n  /* GETers SETers */\n  setBaseUrl = (url) => {\n    this.baseUrl = url;\n  };\n\n  setPrefix = (prefix) => {\n    this.basePrefix = prefix;\n  };\n\n  setFetch = (_fetch) => {\n    const g = global || window;\n    this.fetch = _fetch.bind(g);\n  };\n\n  setBaseOptions = (options) => {\n    this.baseOptions = options;\n  };\n\n  setDispatcher = (dispatch) => {\n    this.dispatch = dispatch.bind(this);\n  };\n\n  getHelpers = () => ({\n    deepMerge,\n  });\n\n  /**\n   * @description Function that creates functions from endpont objects.\n   * It will run through all endpoints and through all endpointCreation function\n   * sending endpoint and endpoint name to it.\n   * By default it will set functions named as endpoint as part of this class,\n   * prefetch, postfetch and transformer methods and add endpoint to a list of original endpoints.\n   * @param {Object} endpoints - object from witch function will be created.\n   * Keys will be the function names.\n   * @memberof Communicator\n   */\n  setEndpoints = (endpoints) => {\n    Object.keys(endpoints).forEach((k) => {\n      this.endpointCreationPool.forEach((ecp) => {\n        ecp(endpoints[k], k);\n      });\n\n      // push endpoint to array of original request if needed for future reference or use\n      this.originalEndpoints[k] = endpoints[k];\n    });\n  };\n\n  /**\n   * @description Function that adds a prefetch method to prefetch pool for future use\n   * @param {Object} endpoint - function will extract prefetch key from endpoint if one exists\n   * @param {String} name - a name of the endpoint\n   * @memberof Communicator\n   */\n  addToPrefetchPool = ({ prefetch }, name) => {\n    if (prefetch && (isFunction(prefetch) || isArray(prefetch))) {\n      this.prefetchPool[name] = prefetch;\n    }\n  };\n\n  /**\n   * @description Function that adds a postfetch method to postfetch pool for future use\n   * @param {Object} endpoint - function will extract postfetch key from endpoint if one exists\n   * @param {String} name - a name of the endpoint\n   * @memberof Communicator\n   */\n  addToPostfetchPool = ({ postfetch }, name) => {\n    if (postfetch && (isFunction(postfetch) || isArray(postfetch))) {\n      this.postfetchPool[name] = postfetch;\n    }\n  };\n\n  /**\n   * @description Function that adds endpoint to this class as class function. Such function\n   * can latter be called by myInstance.endpoint()\n   * @param {Object} endpoint - function will extract postfetch key from endpoint if one exists\n   * @param {String} name - a name of the endpoint\n   * @memberof Communicator\n   */\n  addEndpointAsClassFunction = ({ url, options, useEmptyHeaders }, name) => {\n    // requestParams,requestOptions can be added per request\n    // and will override original params and options\n    this[name] = (requestParams = {}, requestOptions = {}, _useEmptyHeaders) => this.baseFetch(\n      url,\n      options,\n      requestParams,\n      requestOptions,\n      name,\n      _useEmptyHeaders || useEmptyHeaders\n    );\n    // we also add this method to actions\n    this.actions[name] = this[name];\n  };\n\n  /**\n   * @description This is a main fetch function. This will resolve the action and return either\n   *  a Promise if no dispatch is provided or it will dispatch\n   * success/ failure action to redux.\n   * @param {String} url - target url. This will be modified by request object if needed\n   * @param {Object} options - options of the request. Options contains data like headers, method\n   * type and other data you want to include to fetch request.\n   * This will be merged with baseOptions ( globals you can set at creation, options that apply to\n   *  all) and param options. Param options contains aditional\n   * data like body or can modifiy request overriding baseOptions and setted request options.\n   * @param {Object} request - object containing request data that will modify end URL. TODO -\n   * maybe move body params here...\n   * @param {String} name - Name of the api action. Based on name a appropriate action will be\n   * dispatched.\n   * @param {Boolean} useEmptyHeaders - if true, empty headers will be sent.\n   */\n  baseFetch = (\n    url,\n    options = {} /* options from call */,\n    requestParams = {} /* get, post params */,\n    reqestOptions = {} /* options from a singel call */,\n    name,\n    useEmptyHeaders = false\n  ) => {\n    if (!this.fetch) {\n      throw new Error(\n        'rest-fetcher-base requires fetch to be defined. Since none was found in construction you probably forgot to add one manually'\n      );\n    }\n    const expected = requestParams.expected || 'json';\n    /* let endPointUrl; */\n    let endOption = deepMerge(\n      this.baseOptions,\n      options,\n      reqestOptions\n      /* we add body later */\n    );\n    /* clear headers if needed */\n    if (useEmptyHeaders) endOption = { headers: {} };\n\n    let object = {\n      actions: this.actions,\n      getState: this.getState,\n      dispatch: this.dispatch,\n      params: requestParams,\n      options: endOption,\n      url,\n      helpers: this.getHelpers(),\n    };\n\n    if (this.prefetchPool[name] && this.getState) {\n      /* we need this to be an array... */\n      const pf = isArray(this.prefetchPool[name])\n        ? this.prefetchPool[name]\n        : [this.prefetchPool[name]];\n\n      /* you can either change object directly or return {params, options} */\n      pf.forEach((e) => {\n        const res = e(object);\n        if (res) object = deepMerge(object, res);\n      });\n    }\n\n    endOption = deepMerge(object.options, getBody(object.params));\n    const endPointUrl = constructUrl(object.url, object.params, this.baseUrl);\n    /* if no dispatch return promise */\n    /* if (!this.dispatch || this.dispatch === null) {\n      return this.fetch(endPointUrl, endOption);\n    } */\n    /* dispatch action start */\n    if (this.dispatch && this.actionStart) {\n      this.dispatch(this.actionStart(name, endPointUrl, endOption));\n    }\n    /* fetch part */\n    let res;\n    return this.fetch(endPointUrl, endOption)\n      .then((response) => {\n        /* this object will be passes to second .then to be included in END dispatch */\n        res = {\n          ok: response.ok,\n          redirected: response.redirected,\n          status: response.status,\n          type: response.type,\n          url: response.url,\n        };\n        /* if (positiveResponseStatus.indexOf(response.status) !== -1 || response.ok) { */\n        return Promise.all([response[expected](), Promise.resolve(res)]);\n        /* }\n        throw response; */\n      })\n      .then((json) => {\n        /* json[0]->actual response, json[1]->res object storing some metadata */\n        if (this.dispatch && this.actionEnd) {\n          this.dispatch(this.actionEnd(name, json[0], json[1]));\n        }\n        if (this.postfetchPool[name]) {\n          let pfObj = {\n            actions: this.actions,\n            getState: this.getState,\n            dispatch: this.dispatch,\n            data: json[0],\n            helpers: this.getHelpers(),\n          };\n          const pf = isArray(this.postfetchPool[name])\n            ? this.postfetchPool[name]\n            : [this.postfetchPool[name]];\n          pf.forEach((e) => {\n            const rpf = e(pfObj);\n            /* if object is return -> deepMerge it */\n            if (rpf) pfObj = deepMerge(pfObj, rpf);\n          });\n          return Promise.resolve(pfObj.data);\n        }\n        return Promise.resolve(json[0]);\n      })\n      .catch((e) => {\n        if (this.dispatch && this.actionError) {\n          this.dispatch(this.actionError(name, res, e.message));\n        }\n      });\n  };\n}\n\nexport default Communicator;\n","import Api from './src';\n\nexport { default as Base } from './src';\nexport default new Api();\n"],"names":["EXCLUDED","mergeTwo","obj1","obj2","_obj2","out","Object","keys","forEach","k","constructor","Array","concat","assign","deepMerge","args","e","getGetParamsAsString","getObj","isEmpty","i","constructUrl","endPointUrl","request","baseUrl","url","leftovers","indexOf","isObject","key","regex","RegExp","test","replace","getBody","body","JSON","stringify","Communicator","setBaseUrl","setPrefix","prefix","basePrefix","setFetch","_fetch","g","global","window","fetch","bind","setBaseOptions","options","baseOptions","setDispatcher","dispatch","getHelpers","setEndpoints","endpoints","endpointCreationPool","ecp","originalEndpoints","addToPrefetchPool","name","prefetch","isFunction","isArray","prefetchPool","addToPostfetchPool","postfetch","postfetchPool","addEndpointAsClassFunction","useEmptyHeaders","requestParams","requestOptions","_useEmptyHeaders","baseFetch","actions","reqestOptions","Error","expected","endOption","headers","object","getState","params","helpers","pf","res","actionStart","then","response","ok","redirected","status","type","Promise","all","resolve","json","actionEnd","pfObj","data","rpf","catch","actionError","message","reducerPool","transformerPool","credentials","Accept","Cache","Api"],"mappings":"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"}